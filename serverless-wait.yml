service: stepfunctions

frameworkVersion: '2'

plugins:
  - serverless-step-functions-local
  - serverless-step-functions
  - serverless-offline-lambda
  - serverless-offline

custom:
  serverless-offline:
  stepFunctionsLocal:
    accountId: 101010101010
    region: us-east-1
    TaskResourceMapping:
      FirstState: arn:aws:lambda:us-east-1:101010101010:function:hello
      FinalState: arn:aws:lambda:us-east-1:101010101010:function:world

provider:
  name: aws
  runtime: nodejs12.x

functions:
  hello:
    handler: handler.hello
  world:
    handler: handler.world
  startSF:
    handler: handler.startSF
    events:
      - http:
          path: hello
          method: GET

stepFunctions:
  stateMachines:
    WaitMachine:
      definition:
        Comment: "An example of the Amazon States Language using wait states"
        StartAt: FirstState
        States:
          FirstState:
            Type: Task
            Resource: 
              Fn::GetAtt: [hello, Arn]
            Next: wait_using_seconds
          wait_using_seconds:
            Type: Wait
            Seconds: 10
            Next: FinalState
          FinalState:
            Type: Task
            Resource: 
              Fn::GetAtt: [world, Arn]
            End: true
